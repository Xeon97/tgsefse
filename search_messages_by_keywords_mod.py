
# -*- coding: utf-8 -*-
# meta developer: @YourTelegramUsername
# meta description: –ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.
# meta license: MIT

from .. import loader, utils
import datetime

@loader.tds
class SearchMessagesByKeywordsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö —Å –¥–µ—Ç–∞–ª—è–º–∏."""

    strings = {"name": "SearchMessagesByKeywords"}

    async def poisksocmd(self, message):
        """
        .poiskso (@username) (–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞) - –ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.
        """
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ: (@username –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ) (–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞)")
            return

        args_split = args.split(" ", 1)
        target_user = None
        keywords = ""

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        if len(args_split) == 2 and args_split[0].startswith("@"):
            target_user = args_split[0].strip("@")
            keywords = args_split[1].strip()
        else:
            keywords = args.strip()

        if not keywords:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.")
            return

        await utils.answer(message, f"üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º: '{keywords}'...")

        results = []
        async for dialog in self._client.iter_dialogs():
            chat_id = dialog.id
            chat_name = dialog.name or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
            async for msg in self._client.iter_messages(chat_id, search=keywords, from_user=target_user):
                # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                msg_time = datetime.datetime.fromtimestamp(msg.date.timestamp()).strftime('%Y-%m-%d %H:%M:%S')
                msg_link = f"https://t.me/c/{str(chat_id).replace('-100', '')}/{msg.id}"
                msg_author = msg.sender_id or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π ID"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                results.append(
                    f"üîó [–°–æ–æ–±—â–µ–Ω–∏–µ]({msg_link})\n"
                    f"üïí –î–∞—Ç–∞: {msg_time}\n"
                    f"üë§ –ê–≤—Ç–æ—Ä: {msg_author}\n"
                )

        if results:
            await utils.answer(
                message,
                f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Å–æ–æ–±—â–µ–Ω–∏–π:\n\n" + "\n\n".join(results[:50]) +
                ("\n\n–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ..." if len(results) > 50 else "") + "\n\nüß°"
            )
        else:
            await utils.answer(message, "‚ùå –°–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–∞–∫–∏–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. üß°")
